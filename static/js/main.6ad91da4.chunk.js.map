{"version":3,"sources":["components/home/homeEntry/homeEntry.js","components/forms/forms.js","components/home/userData/userData.js","components/home/weightData/weightData.js","components/home/Home.js","components/account/account.js","components/graph/graph.js","components/history/historyItem.js","components/history/history.js","containers/Tracker.js","store/actions/dataActions.js","containers/App.js","store/actions/UIActions.js","store/actions/actionTypes.js","serviceWorker.js","store/reducers/UIReducer.js","store/reducers/dataReducer.js","index.js"],"names":["withStyles","theme","button","margin","spacing","unit","width","rightIcon","marginLeft","_ref","classes","changeRoute","react_default","a","createElement","Fragment","Grid_default","item","sm","Typography_default","component","variant","gutterBottom","Button_default","color","className","onClick","Icon_default","Forms","nameRef","React","createRef","aWeightRef","gWeightRef","gDateRef","heightRef","handleSubmition","_this","props","user","setName","current","value","weight","focus","setData","_this2","this","_this$props","errors","touched","handleChange","isValid","setFieldTouched","change","name","e","persist","onSubmit","event","preventDefault","TextField_default","required","id","helperText","error","Boolean","onChange","bind","label","inputRef","fullWidth","type","disabled","aWeight","InputProps","startAdornment","InputAdornment_default","position","gWeight","textField","height","date","InputLabelProps","shrink","Component","marginTop","root","Object","objectSpread","mixins","gutters","paddingTop","paddingBottom","validationSchema","Yup","matches","Paper_default","elevation","formik_esm","render","forms_forms","assign","min","typeError","max","concat","Date","getFullYear","Home","route","userCheck","style","backgroundColor","padding","fontSize","cursor","container","direction","justify","alignItems","minHeight","homeEntry","userData","weightData","Account","state","initialWeight","initialDate","actualWeight","goalWeight","goalDate","progress","updateWeight","IMC","IMCTable","history","itemHistory","xs","md","center","paper","borderRadius","opacity","border","fontWeight","Math","sign","toFixed","setState","parseFloat","target","Table_default","TableBody_default","map","TableRow_default","key","TableCell_default","scope","range","align","description","display","justifyContent","textAlign","Graph","keys","data","labels","toConsumableArray","Array","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","react_chartjs_2_es","HistoryItem","day","month","borderBottom","History","historyItem","widht","length","Tracker","changeTrackerRoute","trackerRoute","_this$state","BottomNavigation_default","showLabels","BottomNavigationAction_default","icon","justifySelf","alignSelf","account","graph","history_history","flexGrow","monthArr","init","goal","moment","b","diff","App","handleChangeRoute","status","containers_Tracker","home_Home","connect","ui","dispatch","UIAction","dataAction","gDate","convertDate","replace","getMonth","getDate","getMilliseconds","filter","window","location","hostname","match","initState","reducer","arguments","undefined","action","dif","defineProperty","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION__","createMuiTheme","palette","primary","main","light","dark","secondary","rootReducer","combineReducers","UIReducer","dataReducer","store","createStore","app","es","core_styles","src_containers_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ad91da4.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n    width: '200px'\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing.unit,\r\n  }\r\n});\r\n\r\nconst HomeEntry = ({ classes, changeRoute }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Grid item sm={3}>\r\n                <Typography component=\"h2\" variant=\"h3\" gutterBottom>\r\n                    Weight tracker\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item sm={3} >\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={() => changeRoute('user', true)}>\r\n                <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nHomeEntry.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(HomeEntry)","import React, { Component } from 'react'\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    marginTop: theme.spacing.unit * 2,\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nclass Forms extends Component {\r\n\r\n  nameRef = React.createRef()\r\n\r\n  aWeightRef = React.createRef()\r\n  gWeightRef = React.createRef()\r\n  gDateRef = React.createRef()\r\n  heightRef = React.createRef()\r\n\r\n  handleSubmition = () => {\r\n    if(this.props.user) {\r\n      this.props.setName(this.nameRef.current.value)\r\n      this.props.changeRoute('weight', true)\r\n    } else if (this.props.weight) {\r\n        if(this.aWeightRef.current.value < this.gWeightRef.current.value) {\r\n          this.aWeightRef.current.focus()\r\n          this.aWeightRef.current.value = null\r\n          this.gWeightRef.current.value = null\r\n        } else {\r\n          this.props.changeRoute('tracker', false)\r\n          this.props.setData(this.aWeightRef.current.value, this.gWeightRef.current.value,this.heightRef.current.value, this.gDateRef.current.value)\r\n        }\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes, user, weight, errors, touched, handleChange, isValid, setFieldTouched } = this.props\r\n\r\n    const change = (name, e) => {\r\n      e.persist();\r\n      handleChange(e);\r\n      setFieldTouched(name, true, false);\r\n    }\r\n\r\n    return (\r\n      <form onSubmit={(event) => {\r\n        event.preventDefault();\r\n        this.handleSubmition()\r\n        }}>\r\n          {user ? \r\n          <React.Fragment>\r\n            <TextField\r\n              required\r\n              id=\"name\"\r\n              name=\"name\"\r\n              helperText={touched.name ? errors.name : \"\"}\r\n              error={touched.name && Boolean(errors.name)}\r\n              onChange={change.bind(null, \"name\")}\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              inputRef={this.nameRef}\r\n              fullWidth\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled={!isValid}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </React.Fragment>\r\n           : weight ?\r\n          <React.Fragment>\r\n            <TextField\r\n              required\r\n              id=\"aWeight\"\r\n              name=\"aWeight\"\r\n              helperText={touched.aWeight ? errors.aWeight : \"\"}\r\n              error={touched.aWeight && Boolean(errors.aWeight)}\r\n              onChange={change.bind(null, \"aWeight\")}\r\n              label=\"Actual weight\"\r\n              variant=\"outlined\"\r\n              inputRef={this.aWeightRef}\r\n              fullWidth\r\n              InputProps={{\r\n                startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n              }}\r\n            />\r\n            <TextField\r\n              required\r\n              id=\"gWeight\"\r\n              name=\"gWeight\"\r\n              helperText={touched.gWeight ? errors.gWeight : \"\"}\r\n              error={touched.gWeight && Boolean(errors.gWeight)}\r\n              onChange={change.bind(null, \"gWeight\")}\r\n              label=\"Goal weight\"\r\n              variant=\"outlined\"\r\n              className={classes.textField}\r\n              fullWidth\r\n              inputRef={this.gWeightRef}\r\n              InputProps={{\r\n                startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n              }}\r\n            />\r\n            <TextField\r\n              required\r\n              id=\"height\"\r\n              name=\"height\"\r\n              helperText={touched.height ? errors.height : \"\"}\r\n              error={touched.height && Boolean(errors.height)}\r\n              onChange={change.bind(null, \"height\")}\r\n              label=\"Height\"\r\n              variant=\"outlined\"\r\n              className={classes.textField}\r\n              inputRef={this.heightRef}\r\n              fullWidth\r\n              InputProps={{\r\n                startAdornment: <InputAdornment position=\"start\">M</InputAdornment>,\r\n              }}\r\n            />\r\n            <TextField\r\n              required\r\n              id=\"date\"\r\n              name=\"date\"\r\n              helperText={touched.date ? errors.date : \"\"}\r\n              error={touched.date && Boolean(errors.date)}\r\n              onChange={change.bind(null, \"date\")}\r\n              label=\"Goal Date\"\r\n              type=\"date\"\r\n              variant=\"outlined\"\r\n              className={classes.textField}\r\n              inputRef={this.gDateRef}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled={!isValid}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </React.Fragment> : null }\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Forms)","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from \"yup\"\r\n\r\nimport Forms from 'components/forms/forms'\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n  },\r\n});\r\n  \r\n\r\nconst UserData = (props) => {\r\n    const { classes, changeRoute, setName } = props\r\n\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string('Enter your name')\r\n        .matches(/^[A-Za-z]+$/, 'Name must have only letters')\r\n        .required('Enter valid name')\r\n    })\r\n\r\n    return (\r\n        <Grid item sm={3}>\r\n            <Paper elevation={1} className={classes.root}>\r\n                <Formik\r\n                validationSchema={validationSchema} \r\n                render={(props) => <Forms changeRoute={changeRoute} setName={setName} user {...props} />} />\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UserData)","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\"\r\n\r\nimport Forms from 'components/forms/forms'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nconst WeightData = (props) => {\r\n\r\n    const { classes, changeRoute, setData } = props\r\n\r\n    const validationSchema = Yup.object({\r\n        aWeight: Yup.number('Enter your actual weight')\r\n        .min(30, 'Actual weight must be more than 30 kg')\r\n        .typeError(\"Invalid weight\")\r\n        .required('Actual weight is required'),\r\n        gWeight: Yup.number('Enter your goal weight')\r\n        .min(50, 'Goal weight must be more than 50 kg')\r\n        .typeError(\"Invalid weight\")\r\n        .required('Goal weight is required'),\r\n        height: Yup.number('Enter your height')\r\n        .typeError(\"Invalid height\")\r\n        .max(3, 'Height must be less than 3 M')\r\n        .required('Height is required'),\r\n        date: Yup.date('Select a goal date')\r\n        .typeError(\"Invalid date\")\r\n        .min(`01/01/${new Date().getFullYear()}`)\r\n        .max(\"01/01/2020\")\r\n        .required('A date is required')\r\n    })\r\n\r\n    return (\r\n        <Grid item sm={3}>\r\n            <Paper elevation={1} className={classes.root}>\r\n                <Formik \r\n                render={(props) =><Forms changeRoute={changeRoute} setData={setData} weight {...props} />}\r\n                validationSchema={validationSchema} />\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(WeightData)","import React from 'react';\r\n\r\nimport HomeEntry from './homeEntry/homeEntry'\r\nimport UserData from './userData/userData'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WeightData from './weightData/weightData';\r\n\r\nconst Home = ({ changeRoute, route, userCheck, setName, setData }) => {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Grid item sm={12} style={{ backgroundColor: '#E6D7B2', padding: '20px' }}>\r\n          {userCheck ? <i className=\"material-icons\" style={{fontSize: '40px', cursor: 'pointer'}} onClick={route === 'user' ? () => changeRoute('home', false) : route === 'weight' ? () => changeRoute('user', true) : null}>arrow_back</i> : null}\r\n        </Grid>\r\n        <Grid \r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        style={{ minHeight: '100%', backgroundColor: '#E6D7B2' }}\r\n        >\r\n                {route === 'home' ? <HomeEntry changeRoute={changeRoute} /> :\r\n                route === 'user' ? \r\n                    <UserData changeRoute={changeRoute} setName={setName} />\r\n                : route === 'weight' ? \r\n                    <WeightData changeRoute={changeRoute} setData={setData} />\r\n                : null}\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\nexport default Home;","import React, { Component } from 'react'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow'; \r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => {\r\n    return {\r\n        item: {\r\n            display: 'grid',\r\n            justifyContent: 'center',\r\n            textAlign: 'center',\r\n            marginTop: '10px'\r\n        },\r\n        paper: {\r\n            padding: theme.spacing.unit * 3\r\n        },\r\n        center: {\r\n            display: 'grid',\r\n            justifyContent: 'center'\r\n        }\r\n    }\r\n}\r\n\r\nclass Account extends Component {\r\n\r\n    state = {\r\n        weight: 0\r\n    }\r\n\r\n    render() {\r\n        const { classes, initialWeight, initialDate, actualWeight, goalWeight, goalDate, progress, updateWeight, name, IMC, IMCTable, history, itemHistory } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <Grid item xs={12} md={12} className={classes.center}><Paper elevation={0} className={classes.paper} style={{borderRadius: '5px', opacity: '0.7', border: '4px solid black', fontWeight: 'bold'}}>{name}</Paper></Grid>\r\n                <Grid container direction='row' justify='flex-start' spacing={16}>\r\n                    <Grid item xs={3} md={3} className={classes.item}>\r\n                        <Paper elevation={3} className={classes.paper}>\r\n                            <Typography component=\"h6\" variant=\"h6\" gutterBottom style={{fontSize: '16px'}}> \r\n                                {initialWeight}Kg\r\n                            </Typography>\r\n                            <Typography component=\"h6\" variant=\"h6\" style={{fontSize: '16px'}} gutterBottom>\r\n                                Initial Weight\r\n                            </Typography>\r\n                        </Paper>\r\n                    <p>{initialDate}</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6} className={classes.item}>\r\n                        <Paper elevation={3} className={classes.paper}>\r\n                            <Typography component=\"h6\" variant=\"h6\" gutterBottom> \r\n                                {Math.sign(progress) === -1 ? <span style={{color: 'red'}}>{actualWeight}Kg</span> : `${actualWeight}Kg`}\r\n                            </Typography>\r\n                            <Typography component=\"h6\" variant=\"h6\" gutterBottom>\r\n                                Actual Weight\r\n                            </Typography>\r\n                            <Typography component=\"h6\" variant=\"h6\" gutterBottom>\r\n                                {Math.sign(progress) === -1 ? <span style={{color: 'red'}}>{progress.toFixed(1)}%</span> : `${progress.toFixed(1)}%`}\r\n                            </Typography>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={3} md={3} className={classes.item}>\r\n                        <Paper elevation={3} className={classes.paper}>\r\n                            <Typography component=\"h6\" variant=\"h6\" gutterBottom style={{fontSize: '16px'}}> \r\n                                {goalWeight}Kg\r\n                            </Typography>\r\n                            <Typography component=\"h6\" variant=\"h6\" gutterBottom style={{fontSize: '16px'}}>\r\n                                Goal Weight\r\n                            </Typography>\r\n                        </Paper>\r\n                        <p>{goalDate}</p>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} className={classes.center}>\r\n                    <TextField\r\n                    required\r\n                    id=\"outlined-name\"\r\n                    label=\"Weight\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => {this.setState({weight: parseFloat(e.target.value)})}}\r\n                    />\r\n                    <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                        if(this.state.weight) {\r\n                            updateWeight(this.state.weight)\r\n                            history(this.state.weight, itemHistory)\r\n                        }\r\n                        }}\r\n                    >\r\n                    Today Weight\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item xs={12} style={{marginTop: '30px'}}>\r\n                    <Typography component=\"h6\" variant=\"h6\" gutterBottom className={classes.center}>IMC</Typography>\r\n                    <p className={classes.center}>Your IMC: {IMC.toFixed(0)}</p>\r\n                    <Table>\r\n                        <TableBody>\r\n                            {IMCTable.map(item => {\r\n                                return (\r\n                                    <TableRow key={item.id}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {item.range}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{item.description}</TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Account)","import React from 'react'\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nconst Graph = ({ range, itemHistory }) => {\r\n\r\n    const map = Object.keys(itemHistory).map(item => {\r\n      return itemHistory[item].value.toFixed(2)\r\n    })\r\n\r\n    const data = {\r\n        labels: [...Array(range).keys()],\r\n        datasets: [\r\n          {\r\n            label: 'Your lost weight',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: 'rgba(75,192,192,0.4)',\r\n            borderColor: 'rgba(75,192,192,1)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(75,192,192,1)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: map\r\n          }\r\n        ]\r\n      };\r\n\r\n    return (\r\n        <div style={{width: '80vw', height: 'auto'}}><Line data={data} /></div>\r\n    )\r\n}\r\n\r\nexport default Graph","import React from 'react'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst HistoryItem = ({ value, day, month }) => {\r\n\r\n    const bad = () => {\r\n        if(Math.sign(value) === 1) {\r\n            return false\r\n        } else if (Math.sign(value) === -1) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container direction='row' justify='flex-start' style={{borderBottom: '1px solid gray'}}>\r\n            <Grid item xs={3} md={3}>{day} {month}</Grid>\r\n            <Grid item xs={9} md={9} style={bad() ? {display: 'grid', justifyContent: 'flex-end', color: 'red'} : {display: 'grid', justifyContent: 'flex-end', color: 'green'}}>{value.toFixed(2)} Kg</Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default HistoryItem","import React from 'react'\r\n\r\nimport HistoryItem from './historyItem'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst History = ({ itemHistory }) => {\r\n\r\n    const map = Object.keys(itemHistory).map(item => {\r\n        return <HistoryItem value={itemHistory[item].value} day={itemHistory[item].day} month={itemHistory[item].month} key={item} />\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container direction='row' justify='flex-start' spacing={16} style={{height: '50vh', widht: '100%'}}>\r\n                <Grid item xs={12} md={12}>\r\n                    {map.length ? map: <p style={{display: 'grid', justifyContent: 'center'}}>There is not history yet</p>}\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default History","import React, { Component } from 'react'\r\n\r\nimport Account from 'components/account/account'\r\nimport Graph from 'components/graph/graph'\r\nimport History from 'components/history/history'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => {\r\n    return {\r\n        root: {\r\n            display: 'grid',\r\n            height: '100%',\r\n            backgroundColor: '#E6D7B2',\r\n            flexGrow: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'flex-end'\r\n        },\r\n        item: {\r\n            display: 'grid',\r\n            justifyContent: 'center',\r\n            textAlign: 'center',\r\n            marginTop: '10px'\r\n        },\r\n        paper: {\r\n            padding: theme.spacing.unit * 3\r\n        },\r\n        center: {\r\n            display: 'grid',\r\n            justifyContent: 'center'\r\n        }\r\n    }\r\n}\r\n\r\nclass Tracker extends Component {\r\n\r\n    state = {\r\n        IMCTable: [\r\n            {\r\n                id: 1,\r\n                range: '<18,5',\r\n                description: 'Underweight'\r\n            },\r\n            {\r\n                id: 2,\r\n                range: '18,5-24,9',\r\n                description: 'Normal'\r\n            },\r\n            {\r\n                id: 3,\r\n                range: '25,0-29,9',\r\n                description: 'Overweight'\r\n            },\r\n            {\r\n                id: 4,\r\n                range: '30,0-34,9',\r\n                description: 'Obese grade I'\r\n            },\r\n            {\r\n                id: 5,\r\n                range: '35,0-39,9',\r\n                description: 'Obese grade II'\r\n            },\r\n            {\r\n                id: 6,\r\n                range: '>40,0',\r\n                description: 'Obese grade III'\r\n            }\r\n        ],\r\n        value: 0\r\n    }\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({\r\n            value\r\n        })\r\n        if(value === 0) {\r\n            this.props.changeTrackerRoute('tracker')\r\n        } else if (value === 1) {\r\n            this.props.changeTrackerRoute('graph')\r\n        } else if (value === 2) {\r\n            this.props.changeTrackerRoute('history')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, initialWeight, initialDate, actualWeight, goalWeight, goalDate, progress, updateWeight, name, IMC, trackerRoute, range, history, itemHistory, changeRoute } = this.props\r\n        const { value, IMCTable } = this.state\r\n        return (\r\n        <React.Fragment>\r\n           <div className={classes.root}>\r\n           <Button onClick={() => changeRoute('home')}>Back</Button>\r\n           <Grid container direction=\"row\" justify=\"center\">\r\n               <Grid item xs={12} md={12} >\r\n                   <BottomNavigation \r\n                   value={value}\r\n                   onChange={this.handleChange}\r\n                   showLabels>\r\n                   <BottomNavigationAction label=\"Account\" icon={<i className=\"material-icons\">\r\n                   account_circle\r\n                   </i>} />\r\n                       <BottomNavigationAction label=\"Graph\" icon={<i className=\"material-icons\">\r\n                       graphic_eq\r\n                       </i>} />\r\n                       <BottomNavigationAction label=\"History\" icon={<i className=\"material-icons\">\r\n                       history\r\n                       </i>} />\r\n                   </BottomNavigation>\r\n               </Grid>\r\n           </Grid>\r\n                <Paper elevation={3} style={{ width: '100%', justifySelf: 'center', alignSelf: 'center', padding: '15px'}}>\r\n                    {trackerRoute === 'tracker' ? <Account initialWeight={initialWeight} initialDate={initialDate} actualWeight={actualWeight} goalWeight={goalWeight} goalDate={goalDate} progress={progress} updateWeight={updateWeight} name={name} IMC={IMC} IMCTable={IMCTable} history={history} itemHistory={itemHistory} /> : trackerRoute === 'graph' ? <Graph range={range} itemHistory={itemHistory} /> : trackerRoute === 'history' ? <History itemHistory={itemHistory} /> : null}\r\n                </Paper>\r\n           </div>\r\n        </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Tracker)","import * as actionTypes from './actionTypes'\r\n\r\nimport moment from 'moment'\r\n\r\n\r\nconst monthArr = ['Ene', 'Feb', 'March', 'April', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n\r\nexport const setName = (name) => {\r\n    return {\r\n        type: actionTypes.SET_NAME,\r\n        name\r\n    }\r\n}\r\n\r\nconst range = (init, goal) => {\r\n    const goalDate = new Date(goal)\r\n    const a = moment(goalDate)\r\n    const b = moment(init)\r\n    return a.diff(b, 'days')\r\n}\r\n\r\nexport const setData = (aWeight, gWeight, height, gDate) => {\r\n\r\n    const convertDate = gDate.replace(/-/g, '/')\r\n\r\n    const date = new Date();\r\n\r\n    const newActualDate = `${date.getFullYear()}/${date.getMonth()+1 < 10 ? '0' : ''}${date.getMonth()+1}/${date.getDate()}`\r\n\r\n    return {\r\n        type: actionTypes.SET_DATA,\r\n        initialWeight: aWeight,\r\n        initialDate: newActualDate,\r\n        goalWeight: gWeight,\r\n        range: range(date, gDate),\r\n        goalDate: convertDate,\r\n        height\r\n    }\r\n}\r\n\r\nexport const updateWeight = (weight) => {\r\n    return {\r\n        type: actionTypes.UPDATE_WEIGHT,\r\n        weight\r\n    }\r\n}\r\n\r\nexport const history = (value, itemHistory) => {\r\n    const day = new Date().getDate()\r\n    const month = monthArr[new Date().getMonth()]\r\n    const id = new Date().getMilliseconds() * 12345\r\n\r\n    const filter = Object.keys(itemHistory).filter(item => {\r\n        return itemHistory[item].day === day\r\n    })\r\n\r\n    if(filter.length) {\r\n        return {\r\n            type: actionTypes.ADD_TO_HISTORY,\r\n            id: filter[0],\r\n            value\r\n        }\r\n    } else {\r\n        return {\r\n            type: actionTypes.HISTORY,\r\n            id,\r\n            day,\r\n            month,\r\n            value\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport Home from 'components/home/Home'\nimport Tracker from 'containers/Tracker'\n\nimport * as UIAction from 'store/actions/UIActions'\nimport * as dataAction from '../store/actions/dataActions'\n\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    userCheck: false,\n  }\n\n  handleChangeRoute = (route, status) => {\n    this.props.changeRoute(route)\n    this.setState({\n      userCheck: status,\n    })\n  }\n\n  render() {\n\n    const { route, setName, setData, initialWeight, initialDate, actualWeight, goalWeight, goalDate, progress, updateWeight, name, IMC, trackerRoute, changeTrackerRoute, range, history, itemHistory } = this.props\n\n    const { userCheck } = this.state\n\n    return (\n      <React.Fragment>\n        {route === 'tracker' ? <Tracker initialDate={initialDate} initialWeight={initialWeight} actualWeight={actualWeight} goalWeight={goalWeight} goalDate={goalDate} progress={progress} updateWeight={updateWeight} name={name} IMC={IMC} trackerRoute={trackerRoute} changeTrackerRoute={changeTrackerRoute} range={range} history={history} itemHistory={itemHistory} changeRoute={this.handleChangeRoute} /> : <Home changeRoute={this.handleChangeRoute} setName={setName} userCheck={userCheck} route={route} setData={setData} />}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    route: state.ui.route,\n    initialWeight: state.data.initialWeight,\n    actualWeight: state.data.actualWeight,\n    goalWeight: state.data.goalWeight,\n    initialDate: state.data.initialDate,\n    goalDate: state.data.goalDate,\n    progress: state.data.progress,\n    name: state.data.name,\n    IMC: state.data.IMC,\n    trackerRoute: state.ui.trackerRoute,\n    range: state.data.range,\n    itemHistory: state.data.itemHistory\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeRoute: (route) => dispatch(UIAction.changeRoute(route)),\n    setName: (name) => dispatch(dataAction.setName(name)),\n    setData: (aWeight, gWeight, height, gDate) => dispatch(dataAction.setData(aWeight, gWeight, height, gDate)),\n    updateWeight: (weight) => dispatch(dataAction.updateWeight(weight)),\n    changeTrackerRoute: (route) => dispatch(UIAction.changeTrackerRoute(route)),\n    history: (value, itemHistory) => dispatch(dataAction.history(value, itemHistory))\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from './actionTypes'\r\n\r\n\r\nexport const changeRoute = (route) => {\r\n    return {\r\n        type: actionTypes.ROUTE,\r\n        route\r\n    }\r\n}\r\n\r\nexport const changeTrackerRoute = (route) => {\r\n    return {\r\n        type: actionTypes.TRACKER_ROUTER,\r\n        route\r\n    }\r\n}","export const ROUTE = 'ROUTE'\r\nexport const SET_NAME = 'SET_NAME'\r\nexport const SET_DATA = 'SET_DATA'\r\nexport const UPDATE_WEIGHT = 'UPDATE_WEIGHT'\r\nexport const TRACKER_ROUTER = 'TRACKER_ROUTER'\r\nexport const HISTORY = 'HISTORY'\r\nexport const ADD_TO_HISTORY = 'ADD_TO_HISTORY'","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from 'store/actions/actionTypes'\r\n\r\n\r\nconst initState = {\r\n    route: 'home',\r\n    trackerRoute: 'tracker'\r\n}\r\n\r\n\r\nconst reducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.ROUTE:\r\n            return {\r\n                ...state,\r\n                route: action.route\r\n            }\r\n        case actionTypes.TRACKER_ROUTER:\r\n            return {\r\n                ...state,\r\n                trackerRoute: action.route\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes'\r\n\r\n\r\nconst initState = {\r\n    name: '',\r\n    initialWeight: 0,\r\n    actualWeight: 0,\r\n    progress: 0,\r\n    goal: 0,\r\n    goalWeight: 0,\r\n    initialDate: '',\r\n    goalDate: '',\r\n    height: 0,\r\n    IMC: 0,\r\n    range: 0,\r\n    itemHistory: []\r\n}\r\n\r\nconst reducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.SET_NAME: \r\n            return {\r\n                ...state,\r\n                name: action.name\r\n            }\r\n        case actionTypes.SET_DATA:\r\n            return {\r\n                ...state,\r\n                initialWeight: action.initialWeight,\r\n                actualWeight: action.initialWeight,\r\n                goal: action.initialWeight-action.goalWeight,\r\n                goalWeight: action.goalWeight,\r\n                initialDate: action.initialDate,\r\n                goalDate: action.goalDate,\r\n                IMC: action.initialWeight / (action.height * action.height),\r\n                height: action.height,\r\n                range: action.range\r\n            }\r\n        case actionTypes.UPDATE_WEIGHT:\r\n            const dif = state.goal-(action.weight-state.goalWeight)\r\n            return {\r\n                ...state,\r\n                actualWeight: action.weight,\r\n                progress: (dif*100)/(state.initialWeight-state.goalWeight),\r\n                IMC: action.weight/(state.height * state.height)\r\n            }\r\n        case actionTypes.HISTORY:\r\n            return {\r\n                ...state,\r\n                itemHistory: {\r\n                    ...state.itemHistory,\r\n                    [action.id]: {\r\n                        day: action.day,\r\n                        month: action.month,\r\n                        value: state.goal-(action.value-state.goalWeight)\r\n                    }\r\n                }\r\n            }\r\n        case actionTypes.ADD_TO_HISTORY:\r\n            return {\r\n                ...state,\r\n                itemHistory: {\r\n                    ...state.itemHistory,\r\n                    [action.id]: {\r\n                        ...state.itemHistory[action.id],\r\n                        value: state.itemHistory[action.id].value + state.goal-(action.value-state.goalWeight)\r\n                    }\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'containers/App';\nimport * as serviceWorker from 'serviceWorker';\n\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport UIReducer from 'store/reducers/UIReducer'\nimport dataReducer from 'store/reducers/dataReducer'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n        main: '#afb42b',\n        light: '#e4e65e',\n        dark: '#7c8500'\n    },\n    secondary: {\n        main: '#aed581'\n    },\n  },\n});\n\nconst rootReducer = combineReducers({\n    ui: UIReducer,\n    data: dataReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers)\n\nconst app = (\n    <Provider store={store}>\n        <MuiThemeProvider theme={theme}>\n            <App />\n        </MuiThemeProvider>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}